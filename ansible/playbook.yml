# Copyright 2019 John Hurst
# John Hurst (john.b.hurst@gmail.com)
# 2019-06-14

---
- hosts: default
  vars_files:
    - vars.yml

  become: yes
  tasks:

    - name: Install aptitude
      apt:
        name: aptitude
        state: present
        force_apt_get: yes
        update_cache: yes

    - name: Install language/locale support
      apt:
        name: language-pack-en
        state: present

    - name: Install unzip
      apt:
        name: unzip
        state: present

    - name: Install openjdk-8-jdk
      apt:
        name: openjdk-8-jdk
        state: present

    - name: Set JAVA_HOME in environment
      copy:
        dest: /etc/profile.d/java-home.sh
        content: 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/jre'

    - name: Install Clojure
      apt:
        name: clojure
        state: present

    - name: Install Leiningen for Clojure
      apt:
        name: leiningen
        state: present

    # - name: Install Common Lisp
    #   apt:
    #     name: sbcl
    #     state: present

    # - name: Install buildapp for Common Lisp
    #   apt:
    #     name: buildapp
    #     state: present

    - name: Add key for Crystal
      apt_key:
        url: https://keybase.io/crystal/pgp_keys.asc
        state: present

    - name: Define repo for Crystal
      apt_repository:
        repo: deb https://dist.crystal-lang.org/apt crystal main
        state: present

    - name: Install Crystal
      apt:
        name: crystal
        state: present

    - name: Add key for Microsoft
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Define repo for Microsoft .NET Core
      apt_repository:
        repo: deb https://packages.microsoft.com/ubuntu/18.04/prod bionic main
        state: present

    - name: Install .NET Core
      apt:
        name: dotnet-sdk-2.2
        state: present
        update_cache: yes

    - name: Define repo for Elixir
      apt:
        deb: https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb
        state: present

    - name: Install Erlang/OTP platform for Elixir
      apt:
        name: esl-erlang
        state: present
        update_cache: yes

    - name: Install Elixir
      apt:
        name: elixir
        state: present
        update_cache: yes

    - name: Install Go
      apt:
        name: golang-go
        state: present

    - name: Install Groovy
      apt:
        name: groovy
        state: present

    - name: Set GROOVY_HOME in environment
      copy:
        dest: /etc/profile.d/groovy-home.sh
        content: 'export GROOVY_HOME=/usr/share/groovy'

    - name: Install Haskell
      apt:
        name: haskell-platform
        state: present

    - name: Install nodejs for JavaScript
      apt:
        name: nodejs
        state: present

    - name: Download Julia archive
      get_url:
        url: "{{ julia.base_url }}/{{ julia.archive }}"
        dest: "/tmp/{{ julia.archive }}"

    - name: Unpack Julia archive
      unarchive:
        remote_src: yes
        src: "/tmp/{{ julia.archive }}"
        dest: /opt/
        creates: "{{ julia.root }}"

    - name: Set PATH for Julia
      copy:
        dest: /etc/profile.d/julia-path.sh
        content: 'PATH=$PATH:{{ julia.root }}/bin'

    - name: Download Kotlin archive
      get_url:
        url: "{{ kotlin.base_url }}/{{ kotlin.archive }}"
        dest: "/tmp/{{ kotlin.archive }}"

    - name: Unpack Kotlin archive
      unarchive:
        remote_src: yes
        src: "/tmp/{{ kotlin.archive }}"
        dest: /opt/
        creates: "{{ kotlin.root }}"

    - name: Set PATH for Kotlin
      copy:
        dest: /etc/profile.d/kotlin-path.sh
        content: 'PATH=$PATH:{{ kotlin.root }}/bin'

    - name: Install Ruby
      apt:
        name: ruby
        state: present

    - name: Install Rust
      apt:
        name: rustc
        state: present

    - name: Install Scala
      apt:
        name: scala
        state: present

    - name: Install clang dependency for Swift
      apt:
        name: clang
        state: present

    - name: Install libicu-dev dependency for Swift
      apt:
        name: libicu-dev
        state: present

    - name: Download Swift archive
      get_url:
        url: "{{ swift.base_url }}/{{ swift.archive }}"
        dest: "/tmp/{{ swift.archive }}"

    - name: Unpack Swift archive
      unarchive:
        remote_src: yes
        src: "/tmp/{{ swift.archive }}"
        dest: /opt/
        creates: "{{ swift.root }}"

    - name: Set PATH for Swift
      copy:
        dest: /etc/profile.d/swift-path.sh
        content: 'PATH=$PATH:{{ swift.root }}/usr/bin'
